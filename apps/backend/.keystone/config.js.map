{
  "version": 3,
  "sources": ["../keystone.ts", "../modules/auth/index.ts", "../modules/users/user.entity.ts", "../modules/roles/role.entity.ts"],
  "sourcesContent": ["import dotenv from 'dotenv'\nimport { config } from '@keystone-6/core';\n\nimport { withAuth, session } from './modules/auth';\nimport { UserEntity } from './modules/users/user.entity';\nimport { RoleEntity } from './modules/roles/role.entity';\n\ndotenv.config({ path: './config/.env' });\n\nexport default withAuth(\n  config({\n    db: {\n      provider: 'postgresql',\n      url: 'postgres://postgres:postgres@localhost:5432/develop_neuro_control',\n      enableLogging: true,\n      idField: {\n        kind: 'uuid',\n      },\n      onConnect: async () => {\n        console.log('Connected to PostgreSQL')\n      }\n    },\n    lists: {\n      User: UserEntity,\n      Role: RoleEntity\n    },\n    session,\n  })\n);\n", "import { randomBytes } from 'crypto';\nimport { createAuth } from '@keystone-6/auth';\n\nimport { statelessSessions } from '@keystone-6/core/session';\n\nlet sessionSecret = process.env.SESSION_SECRET;\n\nif (!sessionSecret && process.env.NODE_ENV !== 'production') {\n  sessionSecret = randomBytes(32).toString('hex');\n}\n\nconst { withAuth } = createAuth({\n  listKey: 'User',\n  identityField: 'email',\n  secretField: 'password',\n  initFirstItem: {\n    fields: ['username', 'email', 'password'],\n  },\n});\n\nconst sessionMaxAge = 60 * 60 * 24 * 30;\n\nconst session = statelessSessions({\n  maxAge: sessionMaxAge,\n  secret: sessionSecret,\n});\n\nexport { withAuth, session };\n", "import { ListConfig, list } from '@keystone-6/core';\nimport { BaseListTypeInfo } from '@keystone-6/core/types';\nimport { password, relationship, text } from '@keystone-6/core/fields'\n\nexport const UserEntity: ListConfig<BaseListTypeInfo> = list({\n  fields: {\n    username: text(),\n    password: password(),\n    email: text({\n      isIndexed: 'unique'\n    }),\n    role: relationship({\n      ref: 'Role',\n      many: false\n    })\n  },\n  access: {\n    operation: {\n      query: () => true,\n      create: () => true,\n      update: () => true,\n      delete: () => true\n    }\n  },\n})\n", "import { ListConfig, list } from '@keystone-6/core';\nimport { text } from '@keystone-6/core/fields';\nimport { BaseListTypeInfo } from '@keystone-6/core/types';\n\nexport const RoleEntity: ListConfig<BaseListTypeInfo> = list({\n  fields: {\n    name: text(),\n    sysname: text({\n      isIndexed: 'unique'\n    }),\n    // groups: []\n  },\n  access: {\n    operation: {\n      query: () => true,\n      create: () => true,\n      update: () => true,\n      delete: () => true\n    }\n  },\n})\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAmB;AACnB,IAAAA,eAAuB;;;ACDvB,oBAA4B;AAC5B,kBAA2B;AAE3B,qBAAkC;AAElC,IAAI,gBAAgB,QAAQ,IAAI;AAEhC,IAAI,CAAC,iBAAiB,QAAQ,IAAI,aAAa,cAAc;AAC3D,sBAAgB,2BAAY,EAAE,EAAE,SAAS,KAAK;AAChD;AAEA,IAAM,EAAE,SAAS,QAAI,wBAAW;AAAA,EAC9B,SAAS;AAAA,EACT,eAAe;AAAA,EACf,aAAa;AAAA,EACb,eAAe;AAAA,IACb,QAAQ,CAAC,YAAY,SAAS,UAAU;AAAA,EAC1C;AACF,CAAC;AAED,IAAM,gBAAgB,KAAK,KAAK,KAAK;AAErC,IAAM,cAAU,kCAAkB;AAAA,EAChC,QAAQ;AAAA,EACR,QAAQ;AACV,CAAC;;;ACzBD,kBAAiC;AAEjC,oBAA6C;AAEtC,IAAM,iBAA2C,kBAAK;AAAA,EAC3D,QAAQ;AAAA,IACN,cAAU,oBAAK;AAAA,IACf,cAAU,wBAAS;AAAA,IACnB,WAAO,oBAAK;AAAA,MACV,WAAW;AAAA,IACb,CAAC;AAAA,IACD,UAAM,4BAAa;AAAA,MACjB,KAAK;AAAA,MACL,MAAM;AAAA,IACR,CAAC;AAAA,EACH;AAAA,EACA,QAAQ;AAAA,IACN,WAAW;AAAA,MACT,OAAO,MAAM;AAAA,MACb,QAAQ,MAAM;AAAA,MACd,QAAQ,MAAM;AAAA,MACd,QAAQ,MAAM;AAAA,IAChB;AAAA,EACF;AACF,CAAC;;;ACxBD,IAAAC,eAAiC;AACjC,IAAAC,iBAAqB;AAGd,IAAM,iBAA2C,mBAAK;AAAA,EAC3D,QAAQ;AAAA,IACN,UAAM,qBAAK;AAAA,IACX,aAAS,qBAAK;AAAA,MACZ,WAAW;AAAA,IACb,CAAC;AAAA;AAAA,EAEH;AAAA,EACA,QAAQ;AAAA,IACN,WAAW;AAAA,MACT,OAAO,MAAM;AAAA,MACb,QAAQ,MAAM;AAAA,MACd,QAAQ,MAAM;AAAA,MACd,QAAQ,MAAM;AAAA,IAChB;AAAA,EACF;AACF,CAAC;;;AHbD,cAAAC,QAAO,OAAO,EAAE,MAAM,gBAAgB,CAAC;AAEvC,IAAO,mBAAQ;AAAA,MACb,qBAAO;AAAA,IACL,IAAI;AAAA,MACF,UAAU;AAAA,MACV,KAAK;AAAA,MACL,eAAe;AAAA,MACf,SAAS;AAAA,QACP,MAAM;AAAA,MACR;AAAA,MACA,WAAW,YAAY;AACrB,gBAAQ,IAAI,yBAAyB;AAAA,MACvC;AAAA,IACF;AAAA,IACA,OAAO;AAAA,MACL,MAAM;AAAA,MACN,MAAM;AAAA,IACR;AAAA,IACA;AAAA,EACF,CAAC;AACH;",
  "names": ["import_core", "import_core", "import_fields", "dotenv"]
}
